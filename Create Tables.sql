USE EMAIL_DB
GO

-- Сваляме всички таблици
EXEC SP_DROP_TABLE 'BULK_OUTGOING_MESSAGES';
EXEC SP_DROP_TABLE 'BULK_INCOMING_MESSAGES'; 
EXEC SP_DROP_TABLE 'FILES';            
EXEC SP_DROP_TABLE 'USER_MESSAGES';     
EXEC SP_DROP_TABLE 'MESSAGE_RECIPIENTS';      
EXEC SP_DROP_TABLE 'FOLDERS';            
EXEC SP_DROP_TABLE 'MESSAGES';                  
EXEC SP_DROP_TABLE 'USERS';      
EXEC SP_DROP_TABLE 'COUNTRIES';

-- COUNTRIES
CREATE TABLE [COUNTRIES](
    [ID] INT IDENTITY(0,1) NOT NULL,
    [NAME] NVARCHAR(32) NOT NULL,
    [PHONE_NUMBER_CODE] NVARCHAR(5) NOT NULL,
    CONSTRAINT PK_COUNTRY_ID PRIMARY KEY(ID)
);
EXEC sp_addextendedproperty N'MS_Description', N'Table for countries list', N'SCHEMA', N'dbo', N'TABLE', N'COUNTRIES';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Country ID', N'COUNTRIES', N'ID';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Name of the country', N'COUNTRIES', N'NAME';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Country dialing code prefix', N'COUNTRIES', N'PHONE_NUMBER_CODE';
GO

-- USERS
CREATE TABLE [USERS](
    [ID] INT IDENTITY(1,1) NOT NULL,
    [NAME] NVARCHAR(64) NOT NULL,
    [EMAIL] NVARCHAR(64) NOT NULL,
    [PASSWORD] NVARCHAR(64) NOT NULL,
    [PHONE_NUMBER] VARCHAR(15) NOT NULL,
    [COUNTRY_ID] INT DEFAULT 1,
    CONSTRAINT PK_USERS_ID PRIMARY KEY(ID),
    CONSTRAINT FK_USERS_COUNTRIES_COUNTRY_ID FOREIGN KEY (COUNTRY_ID) REFERENCES COUNTRIES(ID)
);

EXEC sp_addextendedproperty N'MS_Description', N'Table for system users', N'SCHEMA', N'dbo', N'TABLE', N'USERS';
EXEC SP_ADD_COLUMN_DESCRIPTION N'User ID', N'USERS', N'ID';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Full name of the user', N'USERS', N'NAME';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Email address of the user', N'USERS', N'EMAIL';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Password hash or secret', N'USERS', N'PASSWORD';
EXEC SP_ADD_COLUMN_DESCRIPTION N'User phone number', N'USERS', N'PHONE_NUMBER';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Foreign key to country', N'USERS', N'COUNTRY_ID';
GO

-- FOLDERS
CREATE TABLE [FOLDERS] (
    [ID] INT IDENTITY(1,1) PRIMARY KEY,
    [USER_ID] INT NOT NULL,
    [NAME] NVARCHAR(64) NOT NULL,
	[FOLDER_DIRECTION] SMALLINT NOT NULL,
    CONSTRAINT UX_FOLDERS_USER_FOLDER UNIQUE(USER_ID, NAME, FOLDER_DIRECTION),
	CONSTRAINT FK_FOLDERS_USERS FOREIGN KEY ([USER_ID]) REFERENCES [USERS](ID)
);

EXEC sp_addextendedproperty N'MS_Description', N'Table for user-defined folders', N'SCHEMA', N'dbo', N'TABLE', N'FOLDERS';
EXEC SP_ADD_COLUMN_DESCRIPTION N'ID', N'FOLDERS', N'ID';
EXEC SP_ADD_COLUMN_DESCRIPTION N'User owning the folder', N'FOLDERS', N'USER_ID';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Name of the folder', N'FOLDERS', N'NAME';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Direction of messages inside the folder', N'FOLDERS', N'FOLDER_DIRECTION';
GO

-- MESSAGES
CREATE TABLE [MESSAGES] (
    [ID] INT IDENTITY(1,1) PRIMARY KEY,
    [FROM_EMAIL] NVARCHAR(128) NOT NULL,
    [SUBJECT] NVARCHAR(128),
    [BODY] NVARCHAR(MAX),
    [DATE_OF_REGISTRATION] DATETIME,
    [DIRECTION] SMALLINT NOT NULL,
    [STATUS] SMALLINT NOT NULL,
	[IS_INTERNAL] BIT NOT NULL DEFAULT 0
);

EXEC sp_addextendedproperty N'MS_Description', N'Table for storing message metadata and content', N'SCHEMA', N'dbo', N'TABLE', N'MESSAGES';
EXEC SP_ADD_COLUMN_DESCRIPTION N'ID', N'MESSAGES', N'ID';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Sender email address', N'MESSAGES', N'FROM_EMAIL';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Subject of the message', N'MESSAGES', N'SUBJECT';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Body/content of the message', N'MESSAGES', N'BODY';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Date/time the message was sent', N'MESSAGES', N'DATE_OF_REGISTRATION';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Message direction (incoming, outgoing, internal)', N'MESSAGES', N'DIRECTION';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Message status (draft, sent, etc.)', N'MESSAGES', N'STATUS';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Wether a message is internal', N'MESSAGES', N'IS_INTERNAL';
GO

CREATE TABLE [FILES](
    [ID] INT IDENTITY(1,1) NOT NULL,
    [NAME] NVARCHAR(128) NOT NULL,
    [CONTENT] VARBINARY(MAX) NOT NULL,
    [MESSAGE_ID] INT NOT NULL,
    CONSTRAINT PK_FILES_ID PRIMARY KEY(ID),
    CONSTRAINT FK_FILES_MESSAGES_MESSAGE_ID FOREIGN KEY ([MESSAGE_ID]) REFERENCES [MESSAGES](ID)
);

EXEC sp_addextendedproperty N'MS_Description', N'Table for storing attachments/files linked to messages', N'SCHEMA', N'dbo', N'TABLE', N'FILES';
EXEC SP_ADD_COLUMN_DESCRIPTION N'File ID', N'FILES', N'ID';
EXEC SP_ADD_COLUMN_DESCRIPTION N'File name including extension', N'FILES', N'NAME';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Binary content of the file', N'FILES', N'CONTENT';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Message ID the file is attached to', N'FILES', N'MESSAGE_ID';
GO

-- MESSAGE_RECIPIENTS
CREATE TABLE [MESSAGE_RECIPIENTS] (
    [ID] INT IDENTITY(1,1) PRIMARY KEY,
    [MESSAGE_ID] INT NOT NULL FOREIGN KEY REFERENCES MESSAGES(ID),
    [EMAIL] NVARCHAR(128) NOT NULL
);

EXEC sp_addextendedproperty N'MS_Description', N'Table for message recipients', N'SCHEMA', N'dbo', N'TABLE', N'MESSAGE_RECIPIENTS';
EXEC SP_ADD_COLUMN_DESCRIPTION N'ID', N'MESSAGE_RECIPIENTS', N'ID';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Id of message', N'MESSAGE_RECIPIENTS', N'MESSAGE_ID';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Email address of recipient', N'MESSAGE_RECIPIENTS', N'EMAIL';
GO

-- USER_MESSAGES
CREATE TABLE [USER_MESSAGES] (
    [USER_ID] INT NOT NULL,
    [MESSAGE_ID] INT NOT NULL FOREIGN KEY REFERENCES MESSAGES(ID),
    [FOLDER_ID] INT FOREIGN KEY REFERENCES FOLDERS(ID),
    [IS_DELETED] BIT NOT NULL DEFAULT 0,
    [IS_READ] BIT NOT NULL DEFAULT 0,
    [PINNED] BIT NOT NULL DEFAULT 0,
    CONSTRAINT PK_USER_MESSAGES PRIMARY KEY (USER_ID, MESSAGE_ID),
	CONSTRAINT FK_USER_MESSAGES_USERS FOREIGN KEY ([USER_ID]) REFERENCES [USERS](ID)
);

EXEC sp_addextendedproperty N'MS_Description', N'Table to store per-user message state', N'SCHEMA', N'dbo', N'TABLE', N'USER_MESSAGES';
EXEC SP_ADD_COLUMN_DESCRIPTION N'User ID', N'USER_MESSAGES', N'USER_ID';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Message ID', N'USER_MESSAGES', N'MESSAGE_ID';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Folder ID', N'USER_MESSAGES', N'FOLDER_ID';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Whether the user has deleted the message', N'USER_MESSAGES', N'IS_DELETED';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Whether the message has been read', N'USER_MESSAGES', N'IS_READ';
EXEC SP_ADD_COLUMN_DESCRIPTION N'Whether the message is pinned', N'USER_MESSAGES', N'PINNED';
GO

CREATE TABLE [BULK_INCOMING_MESSAGES](
	[ID] [INT] IDENTITY(1,1) NOT NULL,
	[RAW_DATA] [NVARCHAR](1024) NOT NULL,
	CONSTRAINT PK_BULK_INCOMING_MESSAGES PRIMARY KEY (ID))

	EXEC sp_addextendedproperty N'MS_Description',N'Table for incoming message to be processed',N'SCHEMA',N'dbo',N'TABLE',N'BULK_INCOMING_MESSAGES'
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'ID for incoming message to be processed',N'BULK_INCOMING_MESSAGES',N'ID';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Raw data',N'BULK_INCOMING_MESSAGES',N'RAW_DATA';
GO

CREATE TABLE [BULK_OUTGOING_MESSAGES](
	[ID] [INT] IDENTITY(1,1) NOT NULL,
	[RAW_DATA] [NVARCHAR](1024) NOT NULL,
	[SCHEDULED_DATE] [INT] NULL,
	[OUTGOING_MESSAGE_ID] [INT] NOT NULL,
	CONSTRAINT PK_BULK_OUTGOING_MESSAGES PRIMARY KEY (ID))

	EXEC sp_addextendedproperty N'MS_Description',N'Table for incoming message to be processed',N'SCHEMA',N'dbo',N'TABLE',N'BULK_OUTGOING_MESSAGES'
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'ID for incoming message to be processed',N'BULK_OUTGOING_MESSAGES',N'ID';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Raw data',N'BULK_OUTGOING_MESSAGES',N'RAW_DATA';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Time to be sent',N'BULK_OUTGOING_MESSAGES',N'SCHEDULED_DATE';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'refrence to message',N'BULK_OUTGOING_MESSAGES',N'OUTGOING_MESSAGE_ID';
GO