USE EMAIL_DB

--Drop Tables

IF EXISTS (SELECT 1 FROM sys.procedures WHERE name = N'SP_DROP_TABLE')
BEGIN
	EXEC sp_dropextendedproperty N'MS_Description',N'SCHEMA',N'dbo',N'PROCEDURE',N'SP_DROP_TABLE'
    DROP PROCEDURE [SP_DROP_TABLE]
END
GO
CREATE PROCEDURE [SP_DROP_TABLE]
    @TABLE_NAME NVARCHAR(128)
AS
BEGIN
    DECLARE @SQL NVARCHAR(MAX)
    DECLARE @COLUMN_NAME NVARCHAR(128)

    DECLARE ColumnCursor CURSOR FOR
        SELECT COLUMN_NAME
        FROM INFORMATION_SCHEMA.COLUMNS
        WHERE TABLE_NAME = @TABLE_NAME

    OPEN ColumnCursor
    FETCH NEXT FROM ColumnCursor INTO @COLUMN_NAME

    WHILE @@FETCH_STATUS = 0
    BEGIN
        SET @SQL = 'EXEC sp_dropextendedproperty N''MS_Description'', N''SCHEMA'', N''dbo'', N''TABLE'', N''' + @TABLE_NAME + ''', N''COLUMN'', N''' +@COLUMN_NAME + ''''
        EXEC sp_executesql @SQL
        FETCH NEXT FROM ColumnCursor INTO @COLUMN_NAME
    END

    CLOSE ColumnCursor
    DEALLOCATE ColumnCursor

	SET @SQL = N'DROP TABLE ' + @TABLE_NAME;
	EXEC sp_executesql @SQL
END
GO
EXEC sp_addextendedproperty N'MS_Description', N'Stored procedure which drops a table with all descriptions', N'SCHEMA', N'dbo', N'PROCEDURE',N'SP_DROP_TABLE'
GO


IF EXISTS (SELECT 1 FROM sys.procedures WHERE name = N'SP_ADD_COLUMN_DESCRIPTION')
BEGIN
	EXEC sp_dropextendedproperty N'MS_Description',N'SCHEMA',N'dbo',N'PROCEDURE',N'SP_ADD_COLUMN_DESCRIPTION'
    DROP PROCEDURE [SP_ADD_COLUMN_DESCRIPTION]
END

GO

CREATE PROCEDURE SP_ADD_COLUMN_DESCRIPTION
    @DESCRIPTION NVARCHAR(MAX),
    @TABLE_NAME NVARCHAR(128),
    @COLUMN_NAME NVARCHAR(128)
AS
BEGIN
    DECLARE @SCHEMA_NAME NVARCHAR(128) = 'dbo'
    DECLARE @Sql NVARCHAR(MAX)

    SET @Sql = N'EXEC sys.sp_addextendedproperty '
           + N'@name = N''MS_Description'', '
           + N'@value = N''' + @DESCRIPTION + ''', '
           + N'@level0type = N''SCHEMA'', '
           + N'@level0name = N''' + @SCHEMA_NAME + ''', '
           + N'@level1type = N''TABLE'', '
           + N'@level1name = N''' + @TABLE_NAME + ''', '
           + N'@level2type = N''COLUMN'', '
           + N'@level2name = N''' + @COLUMN_NAME + ''';';
    EXEC sp_executesql @Sql
END

GO

EXEC sp_addextendedproperty N'MS_Description', N'Stored procedure which adds a description to a column', N'SCHEMA', N'dbo', N'PROCEDURE',N'SP_ADD_COLUMN_DESCRIPTION'
GO

IF EXISTS 
(SELECT * FROM sys.objects 
WHERE object_id=OBJECT_ID(N'[BULK_OUTGOING_MESSAGES]')
AND type in (N'U'))
BEGIN
	EXEC SP_DROP_TABLE '[BULK_OUTGOING_MESSAGES]'
END
GO

IF EXISTS 
(SELECT * FROM sys.objects 
WHERE object_id=OBJECT_ID(N'[FILES]') 
AND type in (N'U'))
BEGIN
	EXEC SP_DROP_TABLE '[FILES]'
end
GO

IF EXISTS 
(SELECT * FROM sys.objects 
WHERE object_id=OBJECT_ID(N'[MESSAGES]')
AND type in (N'U'))
BEGIN
	EXEC SP_DROP_TABLE '[MESSAGES]'
END
GO

IF EXISTS 
(SELECT * FROM sys.objects 
WHERE object_id=OBJECT_ID(N'[CATEGORIES]') 
AND type in (N'U'))
BEGIN
	EXEC SP_DROP_TABLE '[CATEGORIES]'
end
GO

IF EXISTS 
(SELECT * FROM sys.objects 
WHERE object_id=OBJECT_ID(N'[USERS]') 
AND type in (N'U'))
BEGIN
	EXEC SP_DROP_TABLE N'[USERS]'
END
GO

IF EXISTS 
(SELECT * FROM sys.objects 
WHERE object_id=OBJECT_ID(N'[COUNTRIES]') 
AND type in (N'U'))
BEGIN
	EXEC SP_DROP_TABLE N'[COUNTRIES]'
END
GO

IF EXISTS 
(SELECT * FROM sys.objects 
WHERE object_id=OBJECT_ID(N'[BULK_INCOMING_MESSAGES]') 
AND type in (N'U'))
BEGIN
	EXEC SP_DROP_TABLE '[BULK_INCOMING_MESSAGES]'
END
GO

IF EXISTS 
(SELECT * FROM sys.objects 
WHERE object_id=OBJECT_ID(N'[STATUSES]') 
AND type in (N'U'))
BEGIN
	EXEC SP_DROP_TABLE '[STATUSES]'
end
GO

--CREATE Tables

CREATE TABLE [COUNTRIES](
	[ID] [INT] IDENTITY(1,1) NOT NULL,
	[NAME] [NVARCHAR](32) NOT NULL,
	[PHONE_NUMBER_CODE] [NVARCHAR](5) NOT NULL,
	CONSTRAINT PK_COUNTRY_ID PRIMARY KEY(ID))

	EXEC sp_addextendedproperty N'MS_Description',N'Table for countries',N'SCHEMA',N'dbo',N'TABLE',N'COUNTRIES'

	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Id of country',N'COUNTRIES',N'ID';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Name of country',N'COUNTRIES',N'NAME';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Beginning code of phone number for country',N'COUNTRIES',N'PHONE_NUMBER_CODE';
GO

CREATE TABLE [USERS](
	[ID] [INT] IDENTITY(1,1) NOT NULL,
	[NAME] [NVARCHAR](64) NOT NULL,
	[EMAIL] [NVARCHAR](64) NOT NULL,
	[PASSWORD] [NVARCHAR](64) NOT NULL,
	[PHONE_NUMBER] [VARCHAR](15) NOT NULL,
	[COUNTRY_ID] [INT],
	CONSTRAINT PK_USERS_ID PRIMARY KEY(ID),
	CONSTRAINT FK_COUNTRY_ID FOREIGN KEY (COUNTRY_ID) REFERENCES COUNTRIES(ID))

	EXEC sp_addextendedproperty N'MS_Description',N'Table for users',N'SCHEMA',N'dbo',N'TABLE',N'USERS'
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'ID for users',N'USERS',N'ID';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Name of user',N'USERS',N'NAME';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Email of user',N'USERS',N'EMAIL';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Password of user',N'USERS',N'PASSWORD';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Phone number of user',N'USERS',N'PHONE_NUMBER';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Country id of user',N'USERS',N'COUNTRY_ID';
GO

CREATE TABLE [CATEGORIES](
	[ID] [INT] IDENTITY(1,1) NOT NULL,
	[NAME] [NVARCHAR](32) NOT NULL,
	CONSTRAINT PK_CATEGORIES_ID PRIMARY KEY(ID))

	EXEC sp_addextendedproperty N'MS_Description',N'Table for user-defined categories',N'SCHEMA',N'dbo',N'TABLE',N'CATEGORIES'

	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Id of category',N'CATEGORIES',N'ID';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Name of category',N'CATEGORIES',N'NAME';
GO

CREATE TABLE [STATUSES](
	[ID] [INT] IDENTITY(1,1) NOT NULL,
	[VALUE] [NVARCHAR](32) NOT NULL,

	CONSTRAINT PK_STATUSES PRIMARY KEY (ID))
	EXEC sp_addextendedproperty N'MS_Description',N'Table for statuses',N'SCHEMA',N'dbo',N'TABLE',N'STATUSES'

	EXEC SP_ADD_COLUMN_DESCRIPTION  N'ID for statuses',N'STATUSES',N'ID';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Status Value',N'STATUSES',N'VALUE';
GO


CREATE TABLE [MESSAGES](
	[ID] [INT] IDENTITY(1,1) NOT NULL,
	[SENDER_ID] [INT] NOT NULL,
	[RECEIVER_ID] [INT] NOT NULL,
	[SUBJECT] [NVARCHAR] (128) NOT NULL,
	[CONTENT] [NVARCHAR] (896) NOT NULL,
	[STATUS_ID] [INT] NOT NULL,
	[DATE_OF_COMPLETION] [DATETIME] NOT NULL

	CONSTRAINT PK_MESSAGES PRIMARY KEY (ID),
	CONSTRAINT FK_MESSAGE_SENDER_ID FOREIGN KEY (SENDER_ID) REFERENCES USERS(ID),
	CONSTRAINT FK_MESSAGE_RECEIVER_ID FOREIGN KEY (RECEIVER_ID) REFERENCES USERS(ID),
	CONSTRAINT FK_MESSAGE_STATUS_ID FOREIGN KEY (STATUS_ID) REFERENCES STATUSES(ID))

	EXEC sp_addextendedproperty N'MS_Description',N'Table for outgoing messages',N'SCHEMA',N'dbo',N'TABLE',N'MESSAGES'

	EXEC SP_ADD_COLUMN_DESCRIPTION  N'ID received message',N'MESSAGES',N'ID';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'ID for sender',N'MESSAGES',N'SENDER_ID';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'ID for receiver',N'MESSAGES',N'RECEIVER_ID';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Subject of message',N'MESSAGES',N'SUBJECT';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Content of message',N'MESSAGES',N'CONTENT';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Date in which the message was processed',N'MESSAGES',N'DATE_OF_COMPLETION';

GO


CREATE TABLE [FILES](
	[ID] [INT] IDENTITY(1,1) NOT NULL,
	[CONTENT] VARBINARY(MAX) NOT NULL,
	[MESSAGE_ID] [INT] NOT NULL,
	CONSTRAINT PK_FILES_ID PRIMARY KEY(ID),
	CONSTRAINT FK_FILE_MESSAGE_ID FOREIGN KEY ([MESSAGE_ID]) REFERENCES [MESSAGES](ID))

	EXEC sp_addextendedproperty N'MS_Description',N'Table for message files',N'SCHEMA',N'dbo',N'TABLE',N'FILES'

	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Id of file',N'FILES',N'ID';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Content of file',N'FILES',N'CONTENT';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Message which contains the file',N'FILES',N'MESSAGE_ID';
GO

CREATE TABLE [BULK_INCOMING_MESSAGES](
	[ID] [INT] IDENTITY(1,1) NOT NULL,
	[RAW_DATA] [NVARCHAR](1024) NOT NULL,
	CONSTRAINT PK_BULK_INCOMING_MESSAGES PRIMARY KEY (ID))

	EXEC sp_addextendedproperty N'MS_Description',N'Table for incoming message to be processed',N'SCHEMA',N'dbo',N'TABLE',N'BULK_INCOMING_MESSAGES'

	EXEC SP_ADD_COLUMN_DESCRIPTION  N'ID for incoming message to be processed',N'BULK_INCOMING_MESSAGES',N'ID';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Raw data',N'BULK_INCOMING_MESSAGES',N'RAW_DATA';
GO

CREATE TABLE [BULK_OUTGOING_MESSAGES](
	[ID] [INT] IDENTITY(1,1) NOT NULL,
	[RAW_DATA] [NVARCHAR](1024) NOT NULL,
	[SCHEDULED_DATE] [INT] NULL,
	[OUTGOING_MESSAGE_ID] [INT] NOT NULL,
	CONSTRAINT PK_BULK_OUTGOING_MESSAGES PRIMARY KEY (ID))
	EXEC sp_addextendedproperty N'MS_Description',N'Table for incoming message to be processed',N'SCHEMA',N'dbo',N'TABLE',N'BULK_OUTGOING_MESSAGES'

	EXEC SP_ADD_COLUMN_DESCRIPTION  N'ID for incoming message to be processed',N'BULK_OUTGOING_MESSAGES',N'ID';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Raw data',N'BULK_OUTGOING_MESSAGES',N'RAW_DATA';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'Time to be sent',N'BULK_OUTGOING_MESSAGES',N'SCHEDULED_DATE';
	EXEC SP_ADD_COLUMN_DESCRIPTION  N'refrence to message',N'BULK_OUTGOING_MESSAGES',N'OUTGOING_MESSAGE_ID';
GO